# Multi-stage Docker build for production deployment
# Stage 1: Build stage
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git

# Copy package files
COPY package*.json ./
COPY yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile --production=false

# Copy source code
COPY . .

# Build the application
RUN yarn build

# Stage 2: Production stage
FROM node:18-alpine AS production

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Set working directory
WORKDIR /app

# Install production dependencies only
COPY package*.json ./
COPY yarn.lock ./
RUN yarn install --frozen-lockfile --production=true && \
    yarn cache clean

# Copy built application from builder stage
COPY --from=builder --chown=nextjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Copy necessary configuration files
COPY --chown=nextjs:nodejs vite.config.ts ./
COPY --chown=nextjs:nodejs tsconfig.json ./
COPY --chown=nextjs:nodejs tailwind.config.js ./
COPY --chown=nextjs:nodejs postcss.config.js ./

# Create necessary directories
RUN mkdir -p /app/logs && \
    mkdir -p /app/uploads && \
    mkdir -p /app/cache && \
    chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Start the application
CMD ["yarn", "preview", "--host", "0.0.0.0", "--port", "3000"]

# Labels for metadata
LABEL maintainer="Laser Calc Team <team@lasercalc.com>"
LABEL version="1.0.0"
LABEL description="Laser Cutting Calculator - Production Image"
LABEL org.opencontainers.image.source="https://github.com/lasercalc/laser-calc-app"
LABEL org.opencontainers.image.documentation="https://docs.lasercalc.com"
LABEL org.opencontainers.image.licenses="MIT"
